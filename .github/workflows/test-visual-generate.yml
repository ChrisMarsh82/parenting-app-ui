# Generate a set of screenshots on the current branch and store as an artifact for future comparison
name: Test-Visual Generate Screenshots
on:
  workflow_dispatch:
  push:
    branches:
      - master
jobs:
  test_visual_generate:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v1
        with:
          lfs: true
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ./.yarn/cache
          # If cachebusting required (e.g. breaking yarn changes on update) change `v1` to another number
          key: ${{ runner.os }}-node-modules-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v1-
      - name: Populate firebaseConfig.ts
        env:
          FIREBASE_CONFIG_TS: ${{ secrets.FIREBASE_CONFIG_TS }}
        run: echo $FIREBASE_CONFIG_TS > src/environments/firebaseConfig.ts
      - run: yarn install
      # Currently all tests are run against global deployment as this contains debug sheets
      # In the future we will want to move this to a custom deployment for testing purposes
      - name: Set Deployment
        run: yarn scripts deployment set "plh_global"
        # Create a production build and serve via a local webserver
        # HACK - as lifecycle_actions block template view simply remove them all
      - name : Create production build
        run: |
          yarn build
          rm -R www/assets/app_data/sheets/data_list/lifecycle_actions
      # Serve production build locally and generate screenshots. Gracefully terminate server after completion
      - name: Start server and generate screenshots
        run: yarn workspace test-visual start generate --concurrency 5 --serve-www
      - name: Log output folder contents
        run: ls packages/test-visual/output/screenshots
      - name: Upload screenshots
        uses: actions/upload-artifact@v2
        with:
          name: screenshots-artifact # NOTE - must match SCREENSHOT_ARTIFACT_NAME in code
          path: packages/test-visual/output/screenshots
          retention-days: 90
          if-no-files-found: error
