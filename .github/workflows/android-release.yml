# When creating a release in GitHub, create android release AAB and debug APK
# files and upload to release files
name: Android - Release to Google Play
# on:
#   release:
#     types: [published]
on:
  workflow_dispatch:
    inputs:
      build_branch:
        required: true
        description: "Specify branch for deployment"
        default: "deployment/plh_za"
      app_id:
        required: true
        description: "App ID"
        default: "international.idems.plh_teens"
jobs:
  log_build_inputs:
    runs-on: ubuntu-latest
    name: "Branch: ${{github.event.inputs.build_branch}}"
    steps:
      - run: echo "Build branch ${{github.event.inputs.build_branch}}"
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          lfs: true
          ref: "${{github.event.inputs.build_branch}}"
      - name: Checkout LFS objects
        run: git lfs checkout
      # Extract deployment name as the slug of input build branch, e.g. /deployment/plh_tz -> plh_tz
      # https://stackoverflow.com/a/40524879/5693245
      - name: Set Environment Deployment
        run: |
          echo ${{github.event.inputs.build_branch}} | sed 's/.*\///'
          echo "DEPLOYMENT_NAME=$(echo ${{github.event.inputs.build_branch}} | sed 's/.*\///')" >> $GITHUB_ENV;
        shell: bash
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          cache: 'yarn'
      - name: Populate firebaseConfig.ts
        env:
          FIREBASE_CONFIG_TS: ${{ secrets.FIREBASE_CONFIG_TS }}
        run: echo $FIREBASE_CONFIG_TS > src/environments/firebaseConfig.ts
      - name: Populate google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $GOOGLE_SERVICES_JSON > android/app/google-services.json
      - name: Install Dependencies
        run: yarn install
      - name: Set Deployment
        run: yarn scripts deployment set $DEPLOYMENT_NAME
      - name: Build Angular Project
        run: yarn build
      - name: Sync Android Files
        run: npx cap sync
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
          java-package: jdk
          cache: "gradle"
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Build Android Debug APK
        working-directory: android
        run: ./gradlew :app:assembleDebug
      - name: Build Android Release Bundle
        working-directory: android
        run: ./gradlew :app:bundleRelease
      - name: Sign Android Release
        id: sign_aab
        uses: r0adkll/sign-android-release@v1
        with:
          releaseDirectory: ./android/app/build/outputs/bundle/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      # TODO - release assets no longer published as triggered by manual workflow
      # Will need to create additional release workflow to publish any assets

      # - name: Upload Release Asset - Signed App Bundle
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: ./android/app/build/outputs/bundle/release/app-release.aab
      #     asset_name: app-release.aab
      #     asset_content_type: application/zip
      # - name: Upload Release Asset - Debug APK
      #   uses: actions/upload-release-asset@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ github.event.release.upload_url }}
      #     asset_path: ./android/app/build/outputs/apk/debug/app-debug.apk
      #     asset_name: app-debug.apk
      #     asset_content_type: application/zip

      - name: Upload to Google play
        uses: r0adkll/upload-google-play@v1.0.15
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
          packageName: ${{github.event.inputs.app_id}}
          releaseFile: ${{ env.SIGNED_RELEASE_FILE}}
          track: internal
        env:
          GOOGLE_PLAY_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT_JSON }}
