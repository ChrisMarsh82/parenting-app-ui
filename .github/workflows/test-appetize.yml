# Manually trigger an android build and deploy to Appetize.io

name: Test Appetize
on:
  pull_request:
    types: [labeled, synchronize]
    branches:
      - master
jobs:
  build:
    if: contains(github.event.pull_request.labels.*.name, 'Test - appetize')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - name: Checkout LFS objects
        run: git lfs checkout
      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: ./.yarn/cache
          # If cachebusting required (e.g. breaking yarn changes on update) change `v1` to another number
          key: ${{ runner.os }}-node-modules-yarn-v1-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-v1-
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: "16"
      - name: Populate firebaseConfig.ts
        env:
          FIREBASE_CONFIG_TS: ${{ secrets.FIREBASE_CONFIG_TS }}
        run: echo $FIREBASE_CONFIG_TS > src/environments/firebaseConfig.ts
      - name: Populate google-services.json
        env:
          GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
        run: echo $GOOGLE_SERVICES_JSON > android/app/google-services.json
      - name: Install Dependencies
        run: yarn install
      - name: Set Deployment
        run: yarn scripts deployment set "$APP_DEPLOYMENT_NAME"
        env:
          APP_DEPLOYMENT_NAME: ${{ secrets.APP_DEPLOYMENT_NAME }}
      - name: Build Angular Project
        run: yarn build
      - name: Sync Android Files
        run: npx cap sync
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: "11"
          java-package: jdk
          cache: "gradle"
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: Build Android Debug APK
        working-directory: android
        run: ./gradlew :app:assembleDebug
      - name: Upload to Appetize.io
        id: upload
        uses: maxep/appetize-upload-action@0.1.0
        with:
          api-token: ${{ secrets.APPETIZE_TOKEN }}
          file-path: android/app/build/outputs/apk/debug/app-debug.apk
          platform: "android"
          timeout: 30
          # Include to overwrite existing app instead of creating new (will only allow single build at a time)
          public-key: ${{secrets.APPETIZE_APP_KEY}}
      - name: "Post to PR"
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          message: |
            **Android Appetize URL**
            ${{ steps.upload.outputs.APPETIZE_APP_URL }}?device=nexus5&osVersion=10.0&scale=75
